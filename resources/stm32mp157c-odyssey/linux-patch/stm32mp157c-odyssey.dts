// linux/arch/arm/boot/dts/st/stm32mp157c-odyssey.dts
// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
/*
 * Copyright (C) 2020 Marcin Sloniewski <marcin.sloniewski@gmail.com>.
 */

/dts-v1/;

#include "stm32mp157c-odyssey-som.dtsi"
#include "stm32mp157c-odyssey-scmi.dtsi"
#include <dt-bindings/rtc/rtc-stm32.h>

/ {
	model = "Seeed Studio Odyssey-STM32MP157C Board";
	compatible = "seeed,stm32mp157c-odyssey",
		     "seeed,stm32mp157c-odyssey-som", "st,stm32mp157";

	aliases {
		ethernet0 = &ethernet0;
		serial0 = &uart4;
		serial3 = &usart1;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	wifi_pwrseq: wifi-pwrseq {
		compatible = "mmc-pwrseq-simple";
		reset-gpios = <&gpiod 9 GPIO_ACTIVE_LOW>;
		post-power-on-delay-ms = <1>;
	};
};

&dcmi {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&dcmi_pins_b>;
	pinctrl-1 = <&dcmi_sleep_pins_b>;
};

&ethernet0 {
	status = "okay";
	pinctrl-0 = <&ethernet0_rgmii_pins_a>;
	pinctrl-1 = <&ethernet0_rgmii_sleep_pins_a>;
	pinctrl-names = "default", "sleep";
	phy-mode = "rgmii-id";
	max-speed = <1000>;
	phy-handle = <&phy0>;
	st,eth-clk-sel;
	phy-reset-gpios = <&gpiog 0 GPIO_ACTIVE_LOW>;

	mdio0 {
		status = "okay";
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "snps,dwmac-mdio";

		phy0: ethernet-phy@7 {
			reg = <7>;
			reset-gpios = <&gpiog 0 GPIO_ACTIVE_LOW>;
			reset-assert-us = <11000>;
			reset-deassert-us = <1000>;
		};
	};
};

&i2c1 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2c1_pins_a>;
	pinctrl-1 = <&i2c1_sleep_pins_a>;
	i2c-scl-rising-time-ns = <100>;
	i2c-scl-falling-time-ns = <7>;
	status = "okay";
	/delete-property/dmas;
	/delete-property/dma-names;
};

&sdmmc1 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc1_b4_pins_a>;
	pinctrl-1 = <&sdmmc1_b4_od_pins_a>;
	pinctrl-2 = <&sdmmc1_b4_sleep_pins_a>;
	cd-gpios = <&gpioi 3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	disable-wp;
	st,neg-edge;
	bus-width = <4>;
	vmmc-supply = <&v3v3>;
	status = "okay";
};

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart4_pins_a>;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

&pinctrl {
	// sdmmc3 pin configure
	sdmmc3_b4_pins_s: sdmmc3-b4-1 {
		pins1 {
			pinmux = <STM32_PINMUX('F', 0, AF9)>, /* SDMMC3_D0 */
				<STM32_PINMUX('F', 4, AF9)>, /* SDMMC3_D1 */
				<STM32_PINMUX('D', 5, AF10)>, /* SDMMC3_D2 */
				<STM32_PINMUX('D', 7, AF10)>, /* SDMMC3_D3 */
				<STM32_PINMUX('F', 1, AF9)>; /* SDMMC3_CMD */
			slew-rate = <1>;
			drive-push-pull;
			bias-pull-up;
		};
		pins2 {
			pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CLK */
			slew-rate = <2>;
			drive-push-pull;
			bias-pull-up;
		};
	};

	sdmmc3_b4_od_pins_s: sdmmc3-b4-od-1 {
		pins1 {
			pinmux = <STM32_PINMUX('F', 0, AF9)>, /* SDMMC3_D0 */
					<STM32_PINMUX('F', 4, AF9)>, /* SDMMC3_D1 */
					<STM32_PINMUX('D', 5, AF10)>, /* SDMMC3_D2 */
					<STM32_PINMUX('D', 7, AF10)>; /* SDMMC3_D3 */
			slew-rate = <1>;
			drive-push-pull;
			bias-pull-up;
		};
		pins2 {
			pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CLK */
			slew-rate = <2>;
			drive-push-pull;
			bias-pull-up;
		};
		pins3 {
			pinmux = <STM32_PINMUX('F', 1, AF9)>; /* SDMMC2_CMD */
			slew-rate = <1>;
			drive-open-drain;
			bias-pull-up;
		};
	};

	sdmmc3_b4_sleep_pins_s: sdmmc3-b4-sleep-1 {
		pins {
			pinmux = <STM32_PINMUX('F', 0, ANALOG)>, /* SDMMC3_D0 */
					<STM32_PINMUX('F', 4, ANALOG)>, /* SDMMC3_D1 */
					<STM32_PINMUX('D', 5, ANALOG)>, /* SDMMC3_D2 */
					<STM32_PINMUX('D', 7, ANALOG)>, /* SDMMC3_D3 */
					<STM32_PINMUX('G', 15, ANALOG)>, /* SDMMC3_CK */
					<STM32_PINMUX('F', 1, ANALOG)>; /* SDMMC3_CMD */
		};
	};

	rtc_out2_rmp_pins_a: rtc-out2-rmp-pins-0 {
		pins {
			pinmux = <STM32_PINMUX('I', 8, ANALOG)>; /* RTC_OUT2_RMP */
		};
	};
};

&pinctrl_z {
	// usart1 pin configure
	usart1_pins_s: usart1-0 {
		pins1 {
			pinmux = <STM32_PINMUX('Z', 7, AF7)>, /* USART1_TX */
				<STM32_PINMUX('Z', 5, AF7)>; /* USART1_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('Z', 6, AF7)>, /* USART1_RX */
				<STM32_PINMUX('Z', 3, AF7)>; /* USART1_CTS_NSS */
			bias-disable;
		};
	};

	usart1_idle_pins_s: usart1-idle-0 {
		pins1 {
			pinmux = <STM32_PINMUX('Z', 7, ANALOG)>, /* USART1_TX */
				<STM32_PINMUX('Z', 3, ANALOG)>; /* USART1_CTS_NSS */
		};
		pins2 {
			pinmux = <STM32_PINMUX('Z', 5, AF7)>; /* USART1_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins3 {
			pinmux = <STM32_PINMUX('Z', 6, AF7)>; /* USART1_RX */
			bias-disable;
		};
	};

	usart1_sleep_pins_s: usart1-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('Z', 7, ANALOG)>, /* USART1_TX */
				<STM32_PINMUX('Z', 5, ANALOG)>, /* USART1_RTS */
				<STM32_PINMUX('Z', 6, ANALOG)>, /* USART1_RX */
				<STM32_PINMUX('Z', 3, ANALOG)>; /* USART1_CTS_NSS */
		};
	};
};

/* Wifi */
&sdmmc3 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc3_b4_pins_s>;
	pinctrl-1 = <&sdmmc3_b4_od_pins_s>;
	pinctrl-2 = <&sdmmc3_b4_sleep_pins_s>;
	non-removable;
	cap-sdio-irq;
	st,neg-edge;
	bus-width = <4>;
	vmmc-supply = <&v3v3>;
	mmc-pwrseq = <&wifi_pwrseq>;
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	brcmf: bcrmf@1 {
		reg = <1>;
		compatible = "brcm,bcm4329-fmac";
	};
};

/* Bluetooth */
&usart1 {
	pinctrl-names = "default", "sleep", "idle";
	pinctrl-0 = <&usart1_pins_s>;
	pinctrl-1 = <&usart1_sleep_pins_s>;
	pinctrl-2 = <&usart1_idle_pins_s>;
	uart-has-rtscts;
	status = "okay";

	bluetooth {
		host-wakeup-gpios = <&gpioh 3 GPIO_ACTIVE_HIGH>;
		device-wakeup-gpios = <&gpioh 8 GPIO_ACTIVE_HIGH>;
		shutdown-gpios = <&gpioh 9 GPIO_ACTIVE_HIGH>;
		compatible = "brcm,bcm43438-bt";
		max-speed = <3000000>;
		vbat-supply = <&v3v3>;
		vddio-supply = <&v3v3>;
	};
};

/* config RTC to provide clk of ap6263 */
&rtc {
	status = "okay";
	st,lsco = <RTC_OUT2_RMP>;
	pinctrl-names = "default";
	pinctrl-0 = <&rtc_out2_rmp_pins_a>;
};
